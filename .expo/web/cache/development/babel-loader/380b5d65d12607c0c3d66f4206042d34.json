{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = GenerateQR;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeQrcodeSvg = _interopRequireDefault(require(\"react-native-qrcode-svg\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _rowItem = require(\"../component/rowItem\");\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\rayra\\\\Documents\\\\Project Aplikasi\\\\ScanKu\\\\src\\\\screens\\\\createQRGenerated.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction GenerateQR(_ref) {\n  var _ref$route = _ref.route,\n      route = _ref$route === void 0 ? {} : _ref$route;\n  var params = route.params || {};\n  var data = params.data;\n  var insets = (0, _reactNativeSafeAreaContext.useSafeArea)();\n\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      imageUri = _useState2[0],\n      setImageUri = _useState2[1];\n\n  var svg;\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.qrResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNativeQrcodeSvg.default, {\n    value: data,\n    size: 250,\n    getRef: function getRef(c) {\n      return svg = c;\n    },\n    quietZone: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.textData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontSize: 16,\n      color: \"#222\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Text Data:\", \" \"), _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontSize: 16,\n      color: \"#222\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, data)), _react.default.createElement(_rowItem.RowItem, {\n    title: \"Save as Image\",\n    onPress: function onPress() {\n      return alert(\"Image\");\n    },\n    leftIcon: _react.default.createElement(_reactNative.View, {\n      style: {\n        backgroundColor: \"green\",\n        height: 36,\n        width: 36,\n        borderRadius: 18,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, _react.default.createElement(_vectorIcons.Ionicons, {\n      name: \"ios-save\",\n      size: 18,\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_rowItem.RowSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      paddingBottom: insets.bottom\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  qrResult: {\n    alignItems: \"center\"\n  },\n  content: {\n    flex: 1,\n    paddingTop: 20\n  },\n  textData: {\n    flex: 1,\n    marginHorizontal: 25,\n    flexDirection: \"row\",\n    marginVertical: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/rayra/Documents/Project Aplikasi/ScanKu/src/screens/createQRGenerated.js"],"names":["GenerateQR","route","params","data","insets","imageUri","setImageUri","svg","styles","container","content","qrResult","c","textData","fontSize","color","fontWeight","alert","backgroundColor","height","width","borderRadius","justifyContent","alignItems","paddingBottom","bottom","StyleSheet","create","flex","paddingTop","marginHorizontal","flexDirection","marginVertical"],"mappings":"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","sourcesContent":["import {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  Button,\r\n  Image,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport QRCode from \"react-native-qrcode-svg\";\r\n\r\n// import RNQRGenerator from \"rn-qr-generator\";\r\nimport { useSafeArea } from \"react-native-safe-area-context\";\r\n\r\nimport { RowItem, RowSeparator } from \"../component/rowItem\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nexport default function GenerateQR({ route = {} }) {\r\n  const params = route.params || {};\r\n  const { data } = params;\r\n  const insets = useSafeArea();\r\n\r\n  const [imageUri, setImageUri] = useState(null);\r\n\r\n  let svg;\r\n\r\n  // const test = async () => {\r\n  //   svg.toDataURL((data) => {\r\n  //     const shareImageBase64 = {\r\n  //       title: \"QR\",\r\n  //       message: \"Ehi, this is my QR code\",\r\n  //       url: `data:image/png;base64,${data}`,\r\n  //     };\r\n  //     setImageUri(data);\r\n  //     // Share.share(shareImageBase64);\r\n  //   });\r\n  //   await Sharing.shareAsync(\"file:///storage/emulated/0/Pictures/t.png\");\r\n  // };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        <View style={styles.content}>\r\n          <View style={styles.qrResult}>\r\n            <QRCode\r\n              value={data}\r\n              size={250}\r\n              getRef={(c) => (svg = c)}\r\n              quietZone={1}\r\n            />\r\n          </View>\r\n          <View style={styles.textData}>\r\n            <Text style={{ fontSize: 16, color: \"#222\", fontWeight: \"bold\" }}>\r\n              Text Data:{\" \"}\r\n            </Text>\r\n            <Text style={{ fontSize: 16, color: \"#222\" }}>{data}</Text>\r\n          </View>\r\n          <RowItem\r\n            title=\"Save as Image\"\r\n            onPress={() => alert(\"Image\")}\r\n            leftIcon={\r\n              <View\r\n                style={{\r\n                  backgroundColor: \"green\",\r\n                  height: 36,\r\n                  width: 36,\r\n                  borderRadius: 18,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Ionicons name=\"ios-save\" size={18} color=\"white\" />\r\n              </View>\r\n            }\r\n          />\r\n          <RowSeparator />\r\n\r\n          <View style={{ paddingBottom: insets.bottom }} />\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  qrResult: {\r\n    alignItems: \"center\",\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    paddingTop: 20,\r\n  },\r\n  textData: {\r\n    flex: 1,\r\n    marginHorizontal: 25,\r\n    flexDirection: \"row\",\r\n    marginVertical: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}