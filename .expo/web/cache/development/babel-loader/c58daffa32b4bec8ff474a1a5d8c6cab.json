{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = CreateQR;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _focusedStatusBar = require(\"../component/focusedStatusBar\");\n\nvar _rowItem = require(\"../component/rowItem\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\rayra\\\\Documents\\\\Project Aplikasi\\\\ScanKu\\\\src\\\\screens\\\\createQR.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction CreateQR(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      copiedText = _useState2[0],\n      setCopiedText = _useState2[1];\n\n  var fetchCopiedText = function _callee() {\n    var text;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_reactNative.Clipboard.getString().then(function (data) {\n              if (data === 'null') {\n                alert('Clipboard not found !');\n              } else {\n                navigation.push('DetailQR', {\n                  createOptions: 'Clipboard',\n                  data: data\n                });\n              }\n            }));\n\n          case 2:\n            text = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_focusedStatusBar.FocusedStatusBar, {\n    barStyle: \"light-content\",\n    backgroundColor: \"#222\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_rowItem.RowItem, {\n    title: \"Create from clipboard\",\n    onPress: function onPress() {\n      return fetchCopiedText();\n    },\n    leftIcon: _react.default.createElement(_reactNative.View, {\n      style: {\n        backgroundColor: 'green',\n        height: 36,\n        width: 36,\n        borderRadius: 18,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_vectorIcons.Ionicons, {\n      name: \"clipboard\",\n      size: 18,\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_rowItem.RowSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_rowItem.RowItem, {\n    title: \"Text\",\n    onPress: function onPress() {\n      return navigation.push('DetailQR', {\n        data: ''\n      });\n    },\n    leftIcon: _react.default.createElement(_reactNative.View, {\n      style: {\n        backgroundColor: 'green',\n        height: 36,\n        width: 36,\n        borderRadius: 18,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_vectorIcons.Ionicons, {\n      name: \"ios-text\",\n      size: 18,\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_rowItem.RowSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_rowItem.RowItem, {\n    title: \"URL\",\n    onPress: function onPress() {\n      return alert('todo');\n    },\n    leftIcon: _react.default.createElement(_reactNative.View, {\n      style: {\n        backgroundColor: 'green',\n        height: 36,\n        width: 36,\n        borderRadius: 18,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_vectorIcons.Ionicons, {\n      name: \"link\",\n      size: 18,\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_rowItem.RowSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start'\n  }\n});","map":{"version":3,"sources":["C:/Users/rayra/Documents/Project Aplikasi/ScanKu/src/screens/createQR.js"],"names":["CreateQR","navigation","copiedText","setCopiedText","fetchCopiedText","Clipboard","getString","then","data","alert","push","createOptions","text","styles","container","backgroundColor","height","width","borderRadius","justifyContent","alignItems","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Clipboard,\r\n} from 'react-native';\r\nimport {Ionicons} from '@expo/vector-icons';\r\n// import * as Clipboard from \"expo-clipboard\";\r\n\r\nimport {FocusedStatusBar} from '../component/focusedStatusBar';\r\nimport {RowItem, RowSeparator} from '../component/rowItem';\r\n\r\nexport default function CreateQR({navigation}) {\r\n  const [copiedText, setCopiedText] = useState('');\r\n\r\n  const fetchCopiedText = async () => {\r\n    const text = await Clipboard.getString().then(data => {\r\n      if (data === 'null') {\r\n        alert('Clipboard not found !');\r\n      } else {\r\n        // setCopiedText(data);\r\n        navigation.push('DetailQR', {createOptions: 'Clipboard', data: data});\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FocusedStatusBar barStyle=\"light-content\" backgroundColor=\"#222\" />\r\n\r\n      <RowItem\r\n        title=\"Create from clipboard\"\r\n        onPress={() => fetchCopiedText()}\r\n        leftIcon={\r\n          <View\r\n            style={{\r\n              backgroundColor: 'green',\r\n              height: 36,\r\n              width: 36,\r\n              borderRadius: 18,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}>\r\n            <Ionicons name=\"clipboard\" size={18} color=\"white\" />\r\n          </View>\r\n        }\r\n      />\r\n      <RowSeparator />\r\n\r\n      <RowItem\r\n        title=\"Text\"\r\n        onPress={() => navigation.push('DetailQR', {data: ''})}\r\n        leftIcon={\r\n          <View\r\n            style={{\r\n              backgroundColor: 'green',\r\n              height: 36,\r\n              width: 36,\r\n              borderRadius: 18,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}>\r\n            <Ionicons name=\"ios-text\" size={18} color=\"white\" />\r\n          </View>\r\n        }\r\n      />\r\n      <RowSeparator />\r\n\r\n      <RowItem\r\n        title=\"URL\"\r\n        onPress={() => alert('todo')}\r\n        leftIcon={\r\n          <View\r\n            style={{\r\n              backgroundColor: 'green',\r\n              height: 36,\r\n              width: 36,\r\n              borderRadius: 18,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}>\r\n            <Ionicons name=\"link\" size={18} color=\"white\" />\r\n          </View>\r\n        }\r\n      />\r\n      <RowSeparator />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'flex-start',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}