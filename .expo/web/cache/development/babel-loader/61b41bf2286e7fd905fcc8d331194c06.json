{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Home;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _focusedStatusBar = require(\"../component/focusedStatusBar\");\n\nvar _expoBarcodeScanner = require(\"expo-barcode-scanner\");\n\nvar _reactNativeBarcodeMask = _interopRequireDefault(require(\"react-native-barcode-mask\"));\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\rayra\\\\Documents\\\\Project Aplikasi\\\\ScanKu\\\\src\\\\screens\\\\home.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar screen = _reactNative.Dimensions.get('window');\n\nfunction Home() {\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(null),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(''),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      imageUri = _useState8[0],\n      setImageUri = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(0),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      widthImage = _useState10[0],\n      setWidthImage = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(0),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      heightImage = _useState12[0],\n      setHeightImage = _useState12[1];\n\n  var askPermission = function askPermission() {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_expoBarcodeScanner.BarCodeScanner.getPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n\n  (0, _react.useEffect)(function () {\n    askPermission();\n  }, []);\n  var finderWidth = 350;\n  var finderHeight = 350;\n  var viewMinX = (screen.width - finderWidth) / 2;\n  var viewMinY = (screen.height - finderHeight) / 2;\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data,\n        bounds = _ref.bounds;\n\n    if (bounds.origin.x >= viewMinX && bounds.origin.y >= viewMinY) {\n      setScanned(true);\n      alert(\"Tipe barcode adalah \" + type + \" dengan data berisi \" + data);\n    }\n  };\n\n  if (hasPermission === null) {\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: {\n        marginVertical: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Requesting for camera permission\"), _react.default.createElement(_reactNative.Button, {\n      title: \"Press button to grant permission\",\n      onPress: function onPress() {\n        return askPermission();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (hasPermission === false) {\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: {\n        marginVertical: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Requesting for camera permission\"), _react.default.createElement(_reactNative.Button, {\n      title: \"Press button to grant permission\",\n      onPress: function onPress() {\n        return askPermission();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_focusedStatusBar.FocusedStatusBar, {\n    barStyle: \"light-content\",\n    backgroundColor: \"#222\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_expoBarcodeScanner.BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: [_reactNative.StyleSheet.absoluteFillObject, styles.container],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeBarcodeMask.default, {\n    edgeColor: \"#62B1F6\",\n    width: 300,\n    height: 300,\n    showAnimatedLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: [styles.bottomContainer, {\n      flexDirection: 'row'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: {\n      marginHorizontal: 20\n    },\n    onPress: function onPress() {\n      return alert('test');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_vectorIcons.Ionicons, {\n    name: \"image\",\n    size: 24,\n    color: \"white\",\n    style: {\n      marginVertical: 10,\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Scan Image\")), scanned && _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: {\n      marginHorizontal: 20\n    },\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_vectorIcons.Ionicons, {\n    name: \"refresh\",\n    size: 24,\n    color: \"white\",\n    style: {\n      marginVertical: 10,\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Scan Again\"))));\n}\n\nvar opacity = 'rgba(0, 0, 0, .6)';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scanAgain: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bottomContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: screen.height / 1.5\n  }\n});","map":{"version":3,"sources":["C:/Users/rayra/Documents/Project Aplikasi/ScanKu/src/screens/home.js"],"names":["screen","Dimensions","get","Home","hasPermission","setHasPermission","scanned","setScanned","image","setImage","imageUri","setImageUri","widthImage","setWidthImage","heightImage","setHeightImage","askPermission","BarCodeScanner","getPermissionsAsync","status","finderWidth","finderHeight","viewMinX","width","viewMinY","height","handleBarCodeScanned","type","data","bounds","origin","x","y","alert","styles","container","marginVertical","undefined","StyleSheet","absoluteFillObject","bottomContainer","flexDirection","marginHorizontal","alignSelf","color","opacity","create","flex","alignItems","justifyContent","scanAgain","paddingTop"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Button,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport {FocusedStatusBar} from '../component/focusedStatusBar';\r\nimport {BarCodeScanner} from 'expo-barcode-scanner';\r\nimport BarcodeMask from 'react-native-barcode-mask';\r\n// import {Camera} from 'expo-camera';\r\nimport {Ionicons} from '@expo/vector-icons';\r\n// import * as ImagePicker from 'expo-image-picker';\r\n\r\nconst screen = Dimensions.get('window');\r\n\r\nexport default function Home() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const [imageUri, setImageUri] = useState('');\r\n  const [widthImage, setWidthImage] = useState(0);\r\n  const [heightImage, setHeightImage] = useState(0);\r\n  // const [type, setType] = useState(BarCodeScanner.Constants.Type);\r\n\r\n  const askPermission = () => {\r\n    (async () => {\r\n      const {status} = await BarCodeScanner.getPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  };\r\n  useEffect(() => {\r\n    // (async () => {\r\n    //   const { resultImage } = await BarCodeScanner.scanFromURLAsync(\r\n    //     imageUri,\r\n    //     barCodeTypes\r\n    //   );\r\n    //   alert(resultImage);\r\n    // })();\r\n    // pickImage();\r\n    askPermission();\r\n  }, []);\r\n\r\n  const finderWidth = 350;\r\n  const finderHeight = 350;\r\n\r\n  const viewMinX = (screen.width - finderWidth) / 2;\r\n  const viewMinY = (screen.height - finderHeight) / 2;\r\n\r\n  const handleBarCodeScanned = ({type, data, bounds}) => {\r\n    // console.log(bounds.origin);\r\n    if (bounds.origin.x >= viewMinX && bounds.origin.y >= viewMinY) {\r\n      setScanned(true);\r\n      alert(`Tipe barcode adalah ${type} dengan data berisi ${data}`);\r\n    }\r\n    // BarCodeScanner.scanFromURLAsync(imageUri);\r\n    // alert(`Tipe barcode adalah ${type} dengan data berisi ${data}`);\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={{marginVertical: 20}}>\r\n          Requesting for camera permission\r\n        </Text>\r\n\r\n        <Button\r\n          title=\"Press button to grant permission\"\r\n          onPress={() => askPermission()}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (hasPermission === false) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={{marginVertical: 20}}>\r\n          Requesting for camera permission\r\n        </Text>\r\n\r\n        <Button\r\n          title=\"Press button to grant permission\"\r\n          onPress={() => askPermission()}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // const pickImage = async () => {\r\n  //   let result = await ImagePicker.launchImageLibraryAsync({\r\n  //     mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n  //     allowsEditing: true,\r\n  //     quality: 1,\r\n  //   });\r\n\r\n  //   if (!result.cancelled) {\r\n  //     setImage(result.uri);\r\n  //     setWidthImage(result.width);\r\n  //     setHeightImage(result.height);\r\n  //     setImageUri(result.uri);\r\n  //     alert(result.uri);\r\n  //     // (async () => {\r\n  //     //   const { resultImage } = await BarCodeScanner.scanFromURLAsync(\r\n  //     //     imageUri,\r\n  //     //     barCodeTypes\r\n  //     //   );\r\n  //     //   alert(resultImage);\r\n  //     // })();\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FocusedStatusBar barStyle=\"light-content\" backgroundColor=\"#222\" />\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={[StyleSheet.absoluteFillObject, styles.container]}>\r\n        <BarcodeMask\r\n          edgeColor=\"#62B1F6\"\r\n          width={300}\r\n          height={300}\r\n          showAnimatedLine={false}\r\n        />\r\n      </BarCodeScanner>\r\n\r\n      {/* {scanned && (\r\n        <View style={styles.scanAgain}>\r\n          <Button\r\n            title={\"Tap to scan again\"}\r\n            onPress={() => setScanned(false)}\r\n          />\r\n        </View>\r\n      )} */}\r\n\r\n      <View style={[styles.bottomContainer, {flexDirection: 'row'}]}>\r\n        <TouchableOpacity\r\n          style={{marginHorizontal: 20}}\r\n          onPress={() => alert('test')}>\r\n          <Ionicons\r\n            name=\"image\"\r\n            size={24}\r\n            color=\"white\"\r\n            style={{marginVertical: 10, alignSelf: 'center'}}\r\n          />\r\n          <Text style={{color: 'white'}}>Scan Image</Text>\r\n        </TouchableOpacity>\r\n\r\n        {scanned && (\r\n          <TouchableOpacity\r\n            style={{marginHorizontal: 20}}\r\n            onPress={() => setScanned(false)}>\r\n            <Ionicons\r\n              name=\"refresh\"\r\n              size={24}\r\n              color=\"white\"\r\n              style={{marginVertical: 10, alignSelf: 'center'}}\r\n            />\r\n            <Text style={{color: 'white'}}>Scan Again</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n    </View>\r\n    // <View style={styles.container}>\r\n    //   <FocusedStatusBar barStyle=\"dark-content\" backgroundColor=\"transparent\" />\r\n    //   <Camera\r\n    //     onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n    //     ratio=\"16:9\"\r\n    //     style={StyleSheet.absoluteFillObject}\r\n    //   >\r\n    //     <BarcodeMask\r\n    //       edgeColor=\"#62B1F6\"\r\n    //       width={300}\r\n    //       height={300}\r\n    //       showAnimatedLine={false}\r\n    //     />\r\n    //     {scanned && (\r\n    //       <View style={styles.scanAgain}>\r\n    //         <Button\r\n    //           title={\"Tap to scan again\"}\r\n    //           onPress={() => setScanned(false)}\r\n    //         />\r\n    //       </View>\r\n    //     )}\r\n    //   </Camera>\r\n    // </View>\r\n  );\r\n}\r\n\r\nconst opacity = 'rgba(0, 0, 0, .6)';\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  scanAgain: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  bottomContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingTop: screen.height / 1.5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}